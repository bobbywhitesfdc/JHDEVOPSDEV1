//
// Generated by JSON2Apex http://json2apex.herokuapp.com/
//

public class CopadoMetadata implements Comparable {

	public String n { get; set;}   // Name
	public Boolean s {get; set;}   // Selected
	public String d {get; set;}   // Modified Date
	public String b {get; set;}   // Modified By
	public String cd {get; set;}  // Created Date
	public String cb {get; set;}  // Created By
	public String t { get; set;}  // Type
	public Boolean r { get; set; } // Retrieve-Only

	public String userStoryReferences {get; set;}

    /**
      Post process the user Story References ensure they are unique
      and don't repeat values
    **/
	public void dedupReferences() {
		userStoryReferences = (userStoryReferences == null) ? '' : userStoryReferences;
		String[] refs = userStoryReferences.split(',');
		Map<String,String> uniqueRefs = new Map<String,String>();
		for (String current : refs) {
			if (!uniqueRefs.containsKey(current)) {
				uniqueRefs.put(current,current); // only store  single reference
			}
		}

        // Rebuild the property from the map
        userStoryReferences = '';
		for (String current : uniqueRefs.keySet()) {
			if (userStoryReferences.length()>0) {
				userStoryReferences += ',';
			}
			userStoryReferences += current;
		}

	}

    /**
      Key is used for duplicate checks in the Map -- Type + Name + RetrieveOnly
    **/
	public String getKey() {
		return t + ':' + n + ':' + r;
	}

    /**
       compareTo allows this class to be Sorted in a List
       Only Type, Name, Retreive-Only are considered
    **/
	public Integer compareTo(Object compareTo) {
        CopadoMetadata compareToObj = (CopadoMetadata) compareTo;
        if (t > compareToObj.t) {
        	return 1;
        } else if (t < compareToObj.t ) {
            return -1;
        } else if (n > compareToObj.n) {
        	return 1;
        } else if (n < compareToObj.n) {
        	return -1;
        } else if ( (r != compareToObj.r) && r) {   // values not the same = TRUE    case:  (true,false)  
        	return 1;
        } else if ( (r != compareToObj.r)  && !r) {  // values not the same = TRUE   case:  (false,true)
        	return -1;  
        } else {
        	return 0;   // Values the same  Either case (false,false) or case (true,true)
        }

	}
	
	public static CopadoMetadata parse(String json) {
		return (CopadoMetadata) System.JSON.deserialize(json, CopadoMetadata.class);
	}
	public static List<CopadoMetadata> parseArray(String json) {
		return (List<CopadoMetadata>) System.JSON.deserialize(json, List<CopadoMetadata>.class);
	}
}